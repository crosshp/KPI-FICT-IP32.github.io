---
layout: post
title: "Лекція 4. Автентикація"
date: 2016-09-22 14:27:37 +0300
categories: kpi_s07_data_security
---

# Розділ 2. Ідентифікація, Автентикація, Права розмежування доступу в КСС

## 1. Прості паролі

```
login:    somelogin
password: *******
```

Автентикація -- процес підтвердження користувачем своєї особистості.

До пароля висувається ряд вимог:

1. Пароль повинен мати певну довжину. Наразі рекомендована довжина пароля в системах з відкритим доступом -- 8 символів.
2. Пароль не повинен мати семантики. Пароль не повинен асоціюватися із власником.
3. Пароль не може бути простим повторенням символів або простою послідовністю символів.
4. Пароль повинен містити цифри та бути регістрозалежним (case sensitive)
5. При вводі пароль повинен відображатися у вигляді ехо-друку (echo-print). Тобто замість символів паролю відображається якийсь символ-заміщувач (placeholder character)
6. Пароль не має бути представленим у явному вигляді. (записаним на папері, наліпленим на монітор, тощо)

## 2. Оцінка стійкості пароля

Нехай 
- *l* -- довжина пароля. 
- *T_поп* -- час підбору одного пароля. 
- *A* -- потужність алфавіту.

Тоді кількість можливих паролів -- *A ^ l*, а час перебору усіх паролів -- *(A ^ l)T_поп*

Час підбору довільного пароля в середньому складає 
```
       A^l * T_поп
T_пп = -----------
            2
```

Розглянемо такий випадок:

```
l = 3
A = 40
T_поп = 10 ^ (-6) c

       40 ^ 3 * 10 ^ -6
T_пп = ---------------- = 0.032с
              2
```

При довжині пароля у 8 символів маємо:

```
l = 8
A = 40
T_поп = 10 ^ (-6) c

       40 ^ 8 * 10 ^ -6
T_пп = ---------------- = 3276800.0c ~ 38 діб
              2
```

Існує рекомендація, що **змінювати пароль потрібно раз у 30 днів**.

## 3. Модифікація механізму простих паролів.

1. Список паролів.

Адміністратор видає список із n паролів. При першому вході застосовується пароль №1, при другому вході в систему -- другий пароль, при n-ному вході -- пароль №n

На практиці незастосовно через людський фактор.

2. Механізм "рукостискань"

```
                 
        x=0.5    
+---+<-----+---+ 
| A |      |КСС| 
+---+----->+---+ 
  passwd = y(x)  

Суб'єкт A знає функцію y = f(x), яка залежно від параметра x генерує новий пароль
                                                             
```

Проблема даного підходу полягає у тому, що функцію можна підібрати маючи достатню кількість статистичних даних. 
Щоб обійти це -- математики винайшли цілий клас необоротних функцій.

## 4. Багатофакторна автентикація (Multiway authentication)

В цьому випадку для автентикації використовуються 2 незалежні між собою способи автентикації.

### Біометрична автентикація
Як відомо, кожна людина володіє деякими унікальними характеристиками, такими як: *відбиток пальця*, *рисунок рогівки ока*, *тембр голосу*, *почерк*, тощо. Найбільш надійний спосіб автентикації -- це використання біометричних даних (*відбиток пальця*, *рисунок сітківки ока*).

Біометрична автентикація хоч і є надійною, вимагає певну наявність і експлуатуцію додаткових програмних та **апаратних** засобів.

## 5. Рекомендації по вибору механізмів автентикації.

Якщо в комп'ютерній системі оброблюється відкрита інформація або конфіденційна інформація, достатньо використання механізму простих паролів.

Якщо в комп'ютерній системі оброблюється таємна та цілком таємна інформація, то необхідно використовувати біометричні механізми автентикації.

Всі паролі в системі повинні бути унікальними, тобто жодні 2 користувача не можуть мати два однакові паролі.

## 6. Засоби розділення доступу в КСС

Для розділення доступу необхідна наявність 2-х базових компонент:

1. Диспечер доступу
2. Матриця доступу

**Матриця доступу** -- по суті, це реєстраційний журнал. В системі ведеться спеціальний реєстраційний журнал. Він містить близько 5-7 основних полів, деякі з яких за допомогою спеціальних засобів конвертуються в матрицю доступу.
